# HPX loop lci distributed bars
ss_loop_lci_dist_first_fft = ss_loop_48_lci_averaged[:,8]
ss_loop_lci_dist_first_trans = ss_loop_48_lci_averaged[:,11]
ss_loop_lci_dist_second_fft = ss_loop_48_lci_averaged[:,12]
ss_loop_lci_dist_second_trans = ss_loop_48_lci_averaged[:,15]

ss_loop_lci_dist_first_split = ss_loop_48_lci_averaged[:,9]
ss_loop_lci_dist_first_comm = ss_loop_48_lci_averaged[:,10]
ss_loop_lci_dist_second_split = ss_loop_48_lci_averaged[:,13]
ss_loop_lci_dist_second_comm = ss_loop_48_lci_averaged[:,14]

ss_loop_lci_dist_bar_positions = ticks_x  + bar_width

ss_loop_lci_dist_bar_first_fft = plt.bar(ss_loop_lci_dist_bar_positions, ss_loop_lci_dist_first_fft, bar_width-epsilon,
                            color=colors[3],
                            edgecolor='black',
                            linewidth=line_width,
                            hatch='',
                            alpha=opacity,
                            label='First FFT')
sum = ss_loop_lci_dist_first_fft
ss_loop_lci_dist_bar_second_fft = plt.bar(ss_loop_lci_dist_bar_positions, ss_loop_lci_dist_second_fft, bar_width-epsilon,
                            bottom=sum,
                            color=colors[2],
                            edgecolor='black',
                            linewidth=line_width,
                            hatch='',
                            alpha=opacity,
                            label='Second FFT')
sum+= ss_loop_lci_dist_second_fft
ss_loop_lci_dist_bar_first_trans = plt.bar(ss_loop_lci_dist_bar_positions, ss_loop_lci_dist_first_trans , bar_width-epsilon,
                            bottom=sum,
                            color=colors[5],
                            edgecolor='black',
                            linewidth=line_width,
                            hatch='',
                            alpha=opacity,
                            label='First transpose')
sum+= ss_loop_lci_dist_first_trans
ss_loop_lci_dist_bar_second_trans = plt.bar(ss_loop_lci_dist_bar_positions, ss_loop_lci_dist_second_trans, bar_width-epsilon,
                            bottom=sum,
                            color=colors[6],
                            edgecolor='black',
                            linewidth=line_width,
                            hatch='',
                            alpha=opacity,
                            label='Second transpose')
sum+= ss_loop_lci_dist_second_trans
ss_loop_lci_dist_bar_both_split = plt.bar(ss_loop_lci_dist_bar_positions, ss_loop_lci_dist_first_split+ ss_loop_lci_dist_second_split, bar_width-epsilon,
                            bottom=sum,
                            color=colors[8],
                            edgecolor='black',
                            linewidth=line_width,
                            hatch='',
                            alpha=opacity,
                            label='Rearrange')
sum+= ss_loop_lci_dist_first_split+ ss_loop_lci_dist_second_split
ss_loop_lci_dist_bar_both_comm = plt.bar(ss_loop_lci_dist_bar_positions, ss_loop_lci_dist_first_comm+ ss_loop_lci_dist_second_comm, bar_width-epsilon,
                            bottom=sum,
                            color=colors[9],
                            edgecolor='black',
                            linewidth=line_width,
                            hatch='',
                            alpha=opacity,
                            label='Communication')

ss_loop_lci_dist_bars = [ss_loop_lci_dist_bar_first_fft, ss_loop_lci_dist_bar_second_fft, ss_loop_lci_dist_bar_first_trans, ss_loop_lci_dist_bar_second_trans, ss_loop_lci_dist_bar_both_split, ss_loop_lci_dist_bar_both_comm]
ss_loop_lci_dist_legend = plt.legend(ss_loop_lci_dist_bars, ['First FFT', 'Second FFT', 'First transpose', 'Second transpose', 'Rearrange', 'Communication'], title='HPX loop lci dist', bbox_to_anchor=(1.0, 0.5), loc="upper left")
plt.gca().add_artist(ss_loop_lci_dist_legend)

# plot parameters
plt.title('Strong Scaling distribution for buran cluster with with 24 threads and $2^{14}$x$2^{14}$ matrix')
plt.xlabel('N nodes')
#plt.xscale("log")
labels_x = ['1','2','4','8','16']
plt.xticks(ticks=ticks_x, labels= labels_x)
#plt.yscale("log")
plt.ylabel('Runtime in s')
plt.savefig('plot/figures/strong_scaling_buran_distribution.pdf', bbox_inches='tight')